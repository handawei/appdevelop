主页：http://www.mesa3d.org/

下载：http://www.mesa3d.org/download.html 





linux下安装openGL（mesa） 2011-11-02 17:53:46
分类： LINUX
 
2010-05-03 19:15 1858人阅读 评论(0) 收藏 举报
1     下载解压
在官方网站下载最新mesa，mesa主要有以下几部分：
MesaLib-x.y.z - Mesa库源代码，驱动和文档。
MesaDemos-x.y.z - OpenGL的演示和测试程序。绝大多数需要GLUT（Mark Kilgard的原始GLUT／freeglut／OpenGLUT）
MesaGLUT-x.y.z - Mark Kilgard的GLUT，配合mesa使用，也有DOS, OS/2, BeOS等版本。
如果对运行演示没有兴趣，只需要安装第一个包。
如果是新手不知该怎么办，该把这三个包都装上。三个包有.tar.gz，.tar.bz2 和.zip格式，我下载的是.tar.bz2格式，解压缩如下：
bunzip2 -c MesaLib-7.5.1.tar.bz2 |tar xf -
bunzip2 -c MesaDemos-7.5.1.tar.bz2 |tar xf -
bunzip2 -c MesaGLUT-7.5.1.tar.bz2 |tar xf -
如果下载.tar.gz格式，解压缩如下：
tar zvf MesaLib-x.y.z.tar.gz
tar zvf MesaDemos-x.y.z.tar.gz
tar zvf MesaGLUT-x.y.z.tar.gz
在解压后的文件esa-x.y.z中能看到如下目录：
Makefile - top-level Makefile for most systems
configs/ - makefile parameter files for various systems
include/ - GL header (include) files
bin/  - shell scripts for making shared libraries, etc
docs/  - documentation
src/  - source code for libraries
src/mesa - sources for the main Mesa library and device drivers
src/glu  - libGLU source code
src/glx  - sources for building libGL with full GLX and DRI support
src/glw  - Xt/Motif/OpenGL widget code
如果下载解压了MesaDemos.X.Y压缩包，还会有如下目录：
progs/demos - original Mesa demos
progs/xdemos - GLX OpenGL/Mesa demos
progs/redbook - examples from the OpenGL Programming Guide
progs/samples - examples from SGI
progs/images/ - image files
如果下载解压了MesaGLUT.X.Y压缩包，则有如下目录：
src/glut - GLUT library source code
2    安装
需要如下基本配置：
dri2proto version 1.99.3 or later 
Linux 2.6.28 
libDRM version 2.4.15 or later 
Xorg server version 1.5 or later 
建议安装linux是全部组件都装上，这样就不担心了
安装：
可以使用autoconf 来Build，如果这个不管用，就用传统的方式Build
传统的Makefiles方式Build：
stand-alone方式（不用硬件加速器）：make linux-x86
DRI/accelerated（要用硬件了）：make linux-dri，还有因架构而优化的其他如linux-dri-x86, linux-dri-x86-64, and linux-ppc，使用时要保证有相应的DRM and Xserver
完成后格式大致如下：
lrwxrwxrwx    1 brian    users          10 Mar 26 07:53 libGL.so -> libGL.so.1*
lrwxrwxrwx    1 brian    users          19 Mar 26 07:53 libGL.so.1 -> libGL.so.1.5.060100*
-rwxr-xr-x    1 brian    users     3375861 Mar 26 07:53 libGL.so.1.5.060100*
lrwxrwxrwx    1 brian    users          11 Mar 26 07:53 libGLU.so -> libGLU.so.1*
lrwxrwxrwx    1 brian    users          20 Mar 26 07:53 libGLU.so.1 -> libGLU.so.1.3.060100*
-rwxr-xr-x    1 brian    users      549269 Mar 26 07:53 libGLU.so.1.3.060100*
lrwxrwxrwx    1 brian    users          12 Mar 26 07:53 libglut.so -> libglut.so.3*
lrwxrwxrwx    1 brian    users          16 Mar 26 07:53 libglut.so.3 -> libglut.so.3.7.1*
-rwxr-xr-x    1 brian    users      597754 Mar 26 07:53 libglut.so.3.7.1*
lrwxrwxrwx    1 brian    users          11 Mar 26 08:04 libGLw.so -> libGLw.so.1*
lrwxrwxrwx    1 brian    users          15 Mar 26 08:04 libGLw.so.1 -> libGLw.so.1.0.0*
-rwxr-xr-x    1 brian    users       20750 Mar 26 08:04 libGLw.so.1.0.0*
lrwxrwxrwx    1 brian    users          14 Mar 26 07:53 libOSMesa.so -> libOSMesa.so.6*
lrwxrwxrwx    1 brian    users          23 Mar 26 07:53 libOSMesa.so.6 -> libOSMesa.so.6.1.060100*
-rwxr-xr-x    1 brian    users       23871 Mar 26 07:53 libOSMesa.so.6.1.060100*
libGL 是主要的OpenGL库(i.e. Mesa). 
libGLU是OpenGL工具库. 
libglut 是GLUT库. 
libGLw is the Xt/Motif OpenGL drawing area widget library. 
libOSMesa is the OSMesa (Off-Screen) interface library. 
我安装的7.5.1版本还需要手工把glew.h和glut.h写到/usr/include/GL中，这样就不会报错说找不到这两个文件和一些文件类型了
3  运行演示
在演示之前，要设置两个环境变量，如下：
cd lib/ 
export LD_LIBRARY_PATH=${PWD} 
export LIBGL_DRIVERS_PATH=${PWD} (如果用DRI) 
可以转到Mesa/demos/directory：
cd ../progs/demos 
运行一个实例，如gears
4    安装头文件和库文件
make install
mesa的头文件默认在/usr/include/GL/，库文件默认在/usr/lib/，如果想在装一个，就要换个位置了，比如把他们放在/usr/local/include/GL/ 和/usr/local/lib/。
安装前检查下INSTALL_DIR和DRI_DRIVER_INSTALL_DIR ，如果有必要修改下。使用的时候用LD_LIBRARY_PATH选择，这是个比较多种OpenGL实现不同的好方法。
5  用pkg-config建立工程
用pkg-config决定不同的编译器和链接标识
gcc `pkg-config --cflags --libs glut` mydemo.c -o mydemo
 
有问题和我联系，邮箱：juzixiangchang@163.com，呵呵
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
－－－－－－－－－－－－－－－－－－－－－－－－原文如下－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
Downloading
Primary Mesa download site: freedesktop.org (FTP)
When a new release is coming, release candidates (betas) may be found here.
Mesa is distributed in several parts:
MesaLib-x.y.z - the main Mesa library source code, drivers and documentation. 
MesaDemos-x.y.z - OpenGL demonstration and test programs. Most of the programs require GLUT (either the original GLUT by Mark Kilgard or freeglut or OpenGLUT). 
MesaGLUT-x.y.z - Mark Kilgard's GLUT, easily compiled and used with Mesa. Plus, other implementation of GLUT for DOS, OS/2, BeOS, etc. 
If you're not interested in running the demos, you'll only need the first package.
If you're new to this and not sure what you're doing, grab all three packages.
The packages are available in .tar.gz, .tar.bz2 and .zip formats. Other sites might offer additional package formats.
Unpacking
All the packages should be in the same directory prior to unpacking.
To unpack .tar.gz files: 
 tar zxf MesaLib-X.Y.tar.gz
 tar zxf MesaDemos-X.Y.tar.gz
 tar zxf MesaGLUT-X.Y.tar.gz
or 
 gzcat MesaLib-X.Y.tar.gz | tar xf -
 gzcat MesaDemos-X.Y.tar.gz | tar xf -
 gzcat MesaGLUT-X.Y.tar.gz | tar xf -
or 
 gunzip MesaLib-X.Y.tar.gz ; tar xf MesaLib-X.Y.tar
 gunzip MesaDemos-X.Y.tar.gz ; tar xf MesaDemos-X.Y.tar
 gunzip MesaGLUT-X.Y.tar.gz ; tar xf MesaGLUT-X.Y.tar
To unpack .tar.bz2 files: 
 bunzip2 -c MesaLib-X.Y.tar.gz | tar xf -
 bunzip2 -c MesaDemos-X.Y.tar.gz | tar xf -
 bunzip2 -c MesaGLUT-X.Y.tar.gz | tar xf -
To unpack .zip files: 
 unzip MesaLib-X.Y.zip
 unzip MesaDemos-X.Y.zip
 unzip MesaGLUT-X.Y.zip
Contents
After unpacking you'll have these files and directories (among others):
Makefile - top-level Makefile for most systems
configs/ - makefile parameter files for various systems
include/ - GL header (include) files
bin/  - shell scripts for making shared libraries, etc
docs/  - documentation
src/  - source code for libraries
src/mesa - sources for the main Mesa library and device drivers
src/glu  - libGLU source code
src/glx  - sources for building libGL with full GLX and DRI support
src/glw  - Xt/Motif/OpenGL widget code
If you downloaded and unpacked the MesaDemos.X.Y package: 
progs/demos - original Mesa demos
progs/xdemos - GLX OpenGL/Mesa demos
progs/redbook - examples from the OpenGL Programming Guide
progs/samples - examples from SGI
progs/images/ - image files
If you downloaded and unpacked the MesaGLUT.X.Y package: 
src/glut - GLUT library source code
Proceed to the compilation and installation instructions. 
-------------------------------------------------------------------------
1. Unix/X11 Compilation and Installation
1.1 Prerequisites for DRI and hardware acceleration
The following are required for DRI-based hardware acceleration with Mesa:
dri2proto version 1.99.3 or later 
Linux 2.6.28 
libDRM version 2.4.15 or later 
Xorg server version 1.5 or later
1.2 Building with Autoconf
Mesa may be built using autoconf. This should work well on most GNU-based systems. If that fails the traditional Mesa build system is available.
1.3 Building with traditional Makefiles
The traditional Mesa build system is based on a collection of pre-defined system configurations.
To see the list of configurations, just type make. Then choose a configuration from the list and type make configname.
Mesa may be built in several different ways using the predefined configurations:
Stand-alone/Xlib mode - Mesa will be compiled as a software renderer using Xlib to do all rendering. The libGL.so library will be a self-contained rendering library that will allow you to run OpenGL/GLX applications on any X server (regardless of whether it supports the GLX X server extension). You will not be able to use hardware 3D acceleration. 
To compile stand-alone Mesa type make in the top-level directory. You'll see a list of supported system configurations. Choose one from the list (such as linux-x86), and type:
    make linux-x86
This will produce libGL.so and several other libraries
DRI/accelerated - The DRI hardware drivers for accelerated OpenGL rendering (for ATI, Intel, Matrox, etc) will be built. The libGL.so library will support the GLX extension and will load/use the DRI hardware drivers. 
Build Mesa and the DRI hardware drivers by running
   make linux-dri
There are also linux-dri-x86, linux-dri-x86-64, and linux-ppc configurations which are optimized for those architectures.
Make sure you have the prerequisite versions of DRM and Xserver mentioned above.
Later, if you want to rebuild for a different configuration run make realclean before rebuilding.
1.4 The libraries
When compilation has finished, look in the top-level lib/ (or lib64/) directory. You'll see a set of library files similar to this:
lrwxrwxrwx    1 brian    users          10 Mar 26 07:53 libGL.so -> libGL.so.1*
lrwxrwxrwx    1 brian    users          19 Mar 26 07:53 libGL.so.1 -> libGL.so.1.5.060100*
-rwxr-xr-x    1 brian    users     3375861 Mar 26 07:53 libGL.so.1.5.060100*
lrwxrwxrwx    1 brian    users          11 Mar 26 07:53 libGLU.so -> libGLU.so.1*
lrwxrwxrwx    1 brian    users          20 Mar 26 07:53 libGLU.so.1 -> libGLU.so.1.3.060100*
-rwxr-xr-x    1 brian    users      549269 Mar 26 07:53 libGLU.so.1.3.060100*
lrwxrwxrwx    1 brian    users          12 Mar 26 07:53 libglut.so -> libglut.so.3*
lrwxrwxrwx    1 brian    users          16 Mar 26 07:53 libglut.so.3 -> libglut.so.3.7.1*
-rwxr-xr-x    1 brian    users      597754 Mar 26 07:53 libglut.so.3.7.1*
lrwxrwxrwx    1 brian    users          11 Mar 26 08:04 libGLw.so -> libGLw.so.1*
lrwxrwxrwx    1 brian    users          15 Mar 26 08:04 libGLw.so.1 -> libGLw.so.1.0.0*
-rwxr-xr-x    1 brian    users       20750 Mar 26 08:04 libGLw.so.1.0.0*
lrwxrwxrwx    1 brian    users          14 Mar 26 07:53 libOSMesa.so -> libOSMesa.so.6*
lrwxrwxrwx    1 brian    users          23 Mar 26 07:53 libOSMesa.so.6 -> libOSMesa.so.6.1.060100*
-rwxr-xr-x    1 brian    users       23871 Mar 26 07:53 libOSMesa.so.6.1.060100*
libGL is the main OpenGL library (i.e. Mesa). 
libGLU is the OpenGL Utility library. 
libglut is the GLUT library. 
libGLw is the Xt/Motif OpenGL drawing area widget library. 
libOSMesa is the OSMesa (Off-Screen) interface library.
If you built the DRI hardware drivers, you'll also see the DRI drivers:
-rwxr-xr-x   1 brian users 15607851 Jul 21 12:11 ffb_dri.so
-rwxr-xr-x   1 brian users 15148747 Jul 21 12:11 i810_dri.so
-rwxr-xr-x   1 brian users 14497814 Jul 21 12:11 i830_dri.so
-rwxr-xr-x   1 brian users 16895413 Jul 21 12:11 i915_dri.so
-rwxr-xr-x   1 brian users 11320803 Jul 21 12:11 mach64_dri.so
-rwxr-xr-x   1 brian users 11418014 Jul 21 12:12 mga_dri.so
-rwxr-xr-x   1 brian users 11064426 Jul 21 12:12 r128_dri.so
-rwxr-xr-x   1 brian users 11849858 Jul 21 12:12 r200_dri.so
-rwxr-xr-x   1 brian users 16050488 Jul 21 12:11 r300_dri.so
-rwxr-xr-x   1 brian users 11757388 Jul 21 12:12 radeon_dri.so
-rwxr-xr-x   1 brian users 11232304 Jul 21 12:13 s3v_dri.so
-rwxr-xr-x   1 brian users 11062970 Jul 21 12:13 savage_dri.so
-rwxr-xr-x   1 brian users 11214212 Jul 21 12:13 sis_dri.so
-rwxr-xr-x   1 brian users 11368736 Jul 21 12:13 tdfx_dri.so
-rwxr-xr-x   1 brian users 10598868 Jul 21 12:13 trident_dri.so
-rwxr-xr-x   1 brian users 10997120 Jul 21 12:13 unichrome_dri.so
1.5 Running the demos
If you downloaded/unpacked the MesaDemos-x.y.z.tar.gz archive or obtained Mesa from CVS, the progs/ directory will contain a bunch of demonstration programs.
Before running a demo, you'll probably have to set two environment variables to indicate where the libraries are located. For example:

cd lib/ 
export LD_LIBRARY_PATH=${PWD} 
export LIBGL_DRIVERS_PATH=${PWD} (if using DRI drivers) 
Next, change to the Mesa/demos/ directory:
cd ../progs/demos 
Run a demo such as gears:
./gears 
If this doesn't work, try the Mesa/progs/xdemos/glxinfo program and see that it prints the expected Mesa version number.
If you're using Linux or a similar OS, verify that the demo program is being linked with the proper library files:
ldd gears 
You should see something like this:
        libglut.so.3 => /home/brian/Mesa/lib/libglut.so.3 (0x40013000)
        libGLU.so.1 => /home/brian/Mesa/lib/libGLU.so.1 (0x40051000)
        libGL.so.1 => /home/brian/Mesa/lib/libGL.so.1 (0x400e0000)
        libc.so.6 => /lib/i686/libc.so.6 (0x42000000)
        libm.so.6 => /lib/i686/libm.so.6 (0x403da000)
        libX11.so.6 => /usr/X11R6/lib/libX11.so.6 (0x403fc000)
        libXmu.so.6 => /usr/X11R6/lib/libXmu.so.6 (0x404da000)
        libXt.so.6 => /usr/X11R6/lib/libXt.so.6 (0x404f1000)
        libXi.so.6 => /usr/X11R6/lib/libXi.so.6 (0x40543000)
        libstdc++.so.5 => /usr/lib/libstdc++.so.5 (0x4054b000)
        libgcc_s.so.1 => /lib/libgcc_s.so.1 (0x405fd000)
        libXext.so.6 => /usr/X11R6/lib/libXext.so.6 (0x40605000)
        libpthread.so.0 => /lib/i686/libpthread.so.0 (0x40613000)
        /lib/ld-linux.so.2 => /lib/ld-linux.so.2 (0x40000000)
        libdl.so.2 => /lib/libdl.so.2 (0x40644000)
        libSM.so.6 => /usr/X11R6/lib/libSM.so.6 (0x40647000)
        libICE.so.6 => /usr/X11R6/lib/libICE.so.6 (0x40650000)
Retrace your steps if this doesn't look right.
1.6 Installing the header and library files
The standard location for the OpenGL header files on Unix-type systems is in /usr/include/GL/. The standard location for the libraries is /usr/lib/. For more information see, the Linux/OpenGL ABI specification.
If you'd like Mesa to co-exist with another implementation of OpenGL that's already installed, you'll have to choose different directories, like /usr/local/include/GL/ and /usr/local/lib/.
To install Mesa's headers and libraries, run make install. But first, check the Mesa/configs/default file and examine the values of the INSTALL_DIR and DRI_DRIVER_INSTALL_DIR variables. Change them if needed, then run make install.
The variable DESTDIR may also be used to install the contents to a temporary staging directory. This can be useful for package management. For example: make install DESTDIR=/somepath/
Note: at runtime you can use the LD_LIBRARY_PATH environment variable (on Linux at least) to switch between the Mesa libraries and other vendor's libraries whenever you want. This is a handy way to compare multiple OpenGL implementations.
1.7 Building OpenGL programs with pkg-config
Running make install will install package configuration files for the pkg-config utility.
When compiling your OpenGL application you can use pkg-config to determine the proper compiler and linker flags.
For example, compiling and linking a GLUT application can be done with:
   gcc `pkg-config --cflags --libs glut` mydemo.c -o mydemo
 
2. Windows Compilation and Installation
Please see the instructions on building with SCons. Alternatively see README.WIN32 file.
3. Building with SCons
To build Mesa with SCons on Linux or Windows do
    scons
The build output will be placed in build/platform-machine-debug/..., where platform is for example linux or windows, machine is x86 or x86_64, optionally followed by -debug for debug builds.
To build Mesa with SCons for Windows on Linux using the MinGW crosscompiler toolchain do
    scons platform=windows toolchain=crossmingw machine=x86 statetrackers=mesa drivers=softpipe,trace winsys=gdi
This will create:
build/windows-x86-debug/gallium/winsys/gdi/opengl32.dll — Mesa + Gallium + softpipe, binary compatible with Windows's opengl32.dll 
build/windows-x86-debug/glut/glx/glut32.dll 
progs/build/windows-x86-debug/wgl/wglinfo.exe 
progs/build/windows-x86-debug/trivial/tri.exe 
and many other samples in progs/build/windows-x86-debug/... 
Put them all in the same directory to test them.
4. Other systems
Documentation for other environments (some may be very out of date):
README.VMS - VMS 
README.GGI - GGI 
README.3DFX - 3Dfx/Glide driver 
README.AMIWIN - Amiga Amiwin 
README.BEOS - BeOS 
README.D3D - Direct3D driver 
README.DJ - DJGPP 
README.LYNXOS - LynxOS 
README.MINGW32 - Mingw32 
README.NeXT - NeXT 
README.OpenStep - OpenStep 
README.OS2 - OS/2 
README.WINDML - WindML 
